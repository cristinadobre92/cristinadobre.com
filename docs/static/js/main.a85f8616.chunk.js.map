{"version":3,"sources":["components/buttons.jsx","components/portrait.jsx","App.js","serviceWorker.js","index.js"],"names":["Buttons","className","href","target","rel","Potrait","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uRAiEeA,G,gBA9DC,kBACd,yBAAKC,UAAU,WACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,iBACb,uBACEC,KAAK,qCACLC,OAAO,QACPC,IAAI,uBAHN,UAOA,0BAAMH,UAAU,SAAhB,gEAIF,yBAAKA,UAAU,iBACb,uBACEC,KAAK,sDACLC,OAAO,QACPC,IAAI,uBAHN,YAMI,0BAAMH,UAAU,SAAhB,uEAIN,yBAAKA,UAAU,iBACb,uBACEC,KAAK,0CACLC,OAAO,QACPC,IAAI,uBAHN,YAMI,0BAAMH,UAAU,SAAhB,kEAIN,yBAAKA,UAAU,iBACb,uBACEC,KAAK,6CACLC,OAAO,QACPC,IAAI,uBAHN,aAMI,0BAAMH,UAAU,SAAhB,yCAGA,yBAAKA,UAAU,iBACnB,uBACEC,KAAK,qCACLC,OAAO,QACPC,IAAI,uBAHN,WAMI,0BAAMH,UAAU,SAAhB,0EC1BGI,G,MA5BC,kBACd,yBAAKJ,UAAU,YACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,eACb,0BAAMA,UAAU,SAAhB,4CADF,yBAMA,yBAAKA,UAAU,eACb,0BAAMA,UAAU,SAAhB,sDADF,qBAMA,yBAAKA,UAAU,eACb,0BAAMA,UAAU,SAAhB,sDADF,UAMA,yBAAKA,UAAU,QACb,0BAAMA,UAAU,SAAhB,uBADF,sBCVSK,MATf,WACE,OACE,yBAAKL,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGcM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a85f8616.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./buttons.scss\";\n\nconst Buttons = () => (\n  <div className=\"buttons\">\n    <div className=\"buttons-links\">\n      <div className=\"external-link\">\n        <a \n          href=\"https://github.com/cristinadobre92\"\n          target=\"blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>\n        <span className=\"extra\">\n          &nbsp;&nbsp;&nbsp; here are resting all the self-thought projects\n        </span>\n      </div>\n      <div className=\"external-link\">\n        <a\n          href=\"https://www.linkedin.com/in/cristina-dobre-29aa0877\"\n          target=\"blank\"\n          rel=\"noopener noreferrer\"\n        >\n          linkedin\n        </a><span className=\"extra\">\n          &nbsp;&nbsp;&nbsp; what have i done untill now with my professional life \n        </span>\n      </div>\n      <div className=\"external-link\">\n        <a\n          href=\"https://www.facebook.com/dobre.cristina\"\n          target=\"blank\"\n          rel=\"noopener noreferrer\"\n        >\n          facebook\n        </a><span className=\"extra\">\n          &nbsp;&nbsp;&nbsp; not posting much, but following everyone's moves\n        </span>\n      </div>\n      <div className=\"external-link\">\n        <a\n          href=\"https://www.instagram.com/cristina.dobre92\"\n          target=\"blank\"\n          rel=\"noopener noreferrer\"\n        >\n          instagram\n        </a><span className=\"extra\">\n          &nbsp;&nbsp;&nbsp; mainly cats and travels \n        </span>\n      </div><div className=\"external-link\">\n        <a\n          href=\"https://twitter.com/CristinaDobre9\"\n          target=\"blank\"\n          rel=\"noopener noreferrer\"\n        >\n          twitter\n        </a><span className=\"extra\">\n          &nbsp;&nbsp;&nbsp; not very active, but i can be found on this link too\n        </span>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Buttons;\n","import React from \"react\";\nimport \"./portrait.scss\";\n\nconst Potrait = () => (\n  <div className=\"portrait\">\n    <div className=\"portrait-text\">\n      <div className=\"description\">\n        <span className=\"extra\">\n          self-taught React developer &nbsp;&nbsp;&nbsp;\n        </span>\n        web developer wannabe\n      </div>\n      <div className=\"description\">\n        <span className=\"extra\">\n          native romanian, C1 english, B1 czech &nbsp;&nbsp;&nbsp;\n        </span>\n        english, romanian\n      </div>\n      <div className=\"description\">\n        <span className=\"extra\">\n          currently living here for three years &nbsp;&nbsp;&nbsp;\n        </span>\n        prague\n      </div>\n      <div className=\"name\">\n        <span className=\"extra\">hi! my name is &nbsp;</span>cristina dobre\n      </div>\n    </div>\n  </div>\n);\n\nexport default Potrait;\n","import React from 'react';\nimport './App.css';\nimport Buttons from \"./components/buttons\";\nimport Portrait from \"./components/portrait\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Portrait />\n      <Buttons />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}